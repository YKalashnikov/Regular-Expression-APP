enter-transform(position, animation)
  if animation == "perspective"
    if position == "top"
      transform: translateY(-10px) rotateX(0)
    else if position == "bottom"
      transform: translateY(10px) rotateX(0)
    else if position == "left"
      transform: translateX(-10px) rotateY(0)
    else if position == "right"
      transform: translateX(10px) rotateY(0)
  else if animation == "fade"
    if position == "top"
      transform: translateY(-10px)
    else if position == "bottom"
      transform: translateY(10px)
    else if position == "left"
      transform: translateX(-10px)
    else if position == "right"
      transform: translateX(10px)
  else if animation == "scale"
    if position == "top"
      transform: translateY(-10px) scale(1)
    else if position == "bottom"
      transform: translateY(10px) scale(1)
    else if position == "left"
      transform: translateX(-10px) scale(1)
    else if position == "right"
      transform: translateX(10px) scale(1)
leave-transform(position, animation)
  if animation == "perspective"
    if position == "top"
      transform: translateY(0) rotateX(90deg)
    else if position == "bottom"
      transform: translateY(0) rotateX(-90deg)
    else if position == "left"
      transform: translateX(0) rotateY(-90deg)
    else if position == "right"
      transform: translateX(0) rotateY(90deg)
  else if animation == "shift"
    if position == "top"
      transform: translateY(0)
    else if position == "bottom"
      transform: translateY(0)
    else if position == "left"
      transform: translateX(0)
    else if position == "right"
      transform: translateX(0)
  else if animation == "scale"
    if position == "top"
      transform: translateY(0) scale(0)
    else if position == "bottom"
      transform: translateY(0) scale(0)
    else if position == "left"
      transform: translateX(0) scale(0)
    else if position == "right"
      transform: translateX(0) scale(0)
  else if animation == "none"
    if position == "top"
      transform: translateY(-10px)
    else if position == "bottom"
      transform: translateY(10px)
    else if position == "left"
      transform: translateX(-10px)
    else if position == "right"
      transform: translateX(10px)
circle-transform-leave(position)
  if position == "top"
    transform: scale(0) translate(-50%, -50%)
  else if position == "bottom"
    transform: scale(0) translate(-50%, -50%)
  else if position == "left"
    transform: scale(0) translate(-50%, -33%)
  else if position == "right"
    transform: scale(0) translate(-50%, -33%)
arrow(position, width)
  if position == "top"
    transform: rotate(-45deg)
    bottom: -(width/2)
  else if position == "bottom"
    transform: rotate(135deg)
    top: -(width/2)
  else if position == "left"
    transform: rotate(225deg)
    right: -(width/2)
    top: 50%
  else if position == "right"
    transform: rotate(45deg)
    left: -(width/2)
    top: 50%
arrow-styling(position, color)
  if position == "top"
    border-top: 8px solid color
  else if position == "bottom"
    border-bottom: 8px solid color
  else if position == "left"
    border-left: 8px solid color
  else if position == "right"
    border-right: 8px solid color
positions = "top", "bottom", "left", "right"
$origins = bottom, top, right, left
$arrowWidth = 10px
.tippy-touch
  cursor: pointer !important
.tippy-popper
  visibility: hidden
  max-width: 400px
  perspective: 800px
  z-index: 9999
  &.html-template
    max-width: 96%
    max-width: calc(100% - 20px)
  for position in positions
    &[x-placement={position}]
      [x-arrow]
        arrow(position, $arrowWidth)
      $circle-origins = 0% 50%, 0% -50%, 50% 0%, -50% 0%
      [x-circle]
        //Function index is not supported in Stylus
        //transform-origin: nth($circle-origins, index(positions, position))
        &.enter
          opacity: 1
          transform: scale(1) translate(-50%, -47.5%)
        &.leave
          opacity: 0
          circle-transform-leave(position)
      [data-animation=none]
        &.enter
          opacity: 1
          enter-transform(position, "fade")
        &.leave
          opacity: 1
          leave-transform(position, "none")
      [data-animation=perspective]
        //Function index is not supported in Stylus
        //transform-origin: nth($origins, index(positions, position))
        &.enter
          opacity: 1
          enter-transform(position, "perspective")
        &.leave
          opacity: 0
          leave-transform(position, "perspective")
      [data-animation=fade]
        &.enter
          opacity: 1
          enter-transform(position, "fade")
        &.leave
          opacity: 0
          enter-transform(position, "fade")
      [data-animation=shift]
        &.enter
          opacity: 1
          enter-transform(position, "fade")
        &.leave
          opacity: 0
          leave-transform(position, "shift")
      [data-animation=scale]
        &.enter
          opacity: 1
          enter-transform(position, "scale")
        &.leave
          opacity: 0
          leave-transform(position, "scale")
.tippy-tooltip
  position: relative
  color: white
  border-radius: 4px
  padding: 1rem 1.5rem
  line-height 24px
  text-align center
  will-change: transform
  -webkit-font-smoothing: antialiased
  -moz-osx-font-smoothing: grayscale
  background-color: #333
  [x-arrow]
    z-index: -1
    position: absolute
    width: $arrowWidth
    height: $arrowWidth
    background-color: #333
    border-color: transparent transparent #333 #333
  &[data-animatefill]
    overflow: hidden
    background-color: transparent
  &[data-inertia]
    // Safari/Webkit can't go out of range
    -webkit-transition-timing-function: cubic-bezier(0.53, 1, 0.36, 0.85)
    transition-timing-function: cubic-bezier(0.53, 2, 0.36, 0.85)
  [x-circle]
    position: absolute
    will-change: transform
    background-color: #333
    border-radius: 50%
    width: 120%
    width: calc(100% + 2rem)
    left: 50%
    transition: all ease-out
    z-index: -1
    opacity: 0
    overflow: hidden
    &::before
      content: ''
      padding-top: 100%
      padding-top: calc(75% + 2rem)
      float: left
  // Themes
  &.light-theme
    color: #203d5d
    box-shadow: 0 0 16px -4px rgba(0, 20, 40, 0.15), 0 0 80px -10px rgba(0, 20, 40, 0.2)
    background-color: #fff
    [x-circle]
      background-color: #fff
    [x-arrow]
      background-color: #fff
      border-color: transparent transparent #ced2e2 #ced2e2
    &[data-animatefill]
      background-color: transparent
// Fix for iOS animateFill circle
.tippy-iOS-fix
  &.tippy-popper[x-placement=top] [x-circle].leave
    transform: scale(0) translate3d(-50%, -50%, 0)
  &.tippy-popper[x-placement=bottom] [x-circle].leave
    transform: scale(0) translate3d(-50%, -50%, 0)
  &.tippy-popper[x-placement=left] [x-circle].leave
    transform: scale(0) translate3d(-50%, -33%, 0)
  &.tippy-popper[x-placement=right] [x-circle].leave
    transform: scale(0) translate3d(-50%, -33%, 0)
@media (max-width: 500px)
  .tippy-popper
    max-width: 96%
    max-width: calc(100% - 20px)
